name: Python Application CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:    
  pull_request:
    branches:
      - main

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE: karthikamn/flask-api-python-app
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t $DOCKER_IMAGE:${{ github.sha }} .
          docker tag $DOCKER_IMAGE:${{ github.sha }} $DOCKER_IMAGE:latest
      # Push the Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker push $DOCKER_IMAGE:${{ github.sha }}
          docker push $DOCKER_IMAGE:latest
     
    
          
      - name: Set up kubectl for Kubernetes
        uses: azure/setup-kubectl@v3
        with:
         version: 'latest'

      - name: Set Up Minikube (Local Testing)
        run: |
         minikube start
         kubectl config use-context minikube

      - name: Deploy to Kubernetes
        run: |
         kubectl apply -f k8s/deployment.yml
         kubectl apply -f k8s/service.yml     

      
